{
  "config": {
    "step": {
      "pick_implementation": {
        "title": "Select SpotifyPlus OAuth Credential"
      },
      "reauth_confirm": {
        "title": "SpotifyPlus Re-Authentication Required",
        "description": "The Spotify integration needs to re-authenticate with Spotify for account: {account}"
      }
    },
    "abort": {
      "authorize_url_timeout": "Timeout generating authorize URL.",
      "missing_configuration": "The Spotify integration is not configured. Please follow the documentation.",
      "no_url_available": "[%key:common::config_flow::abort::oauth2_no_url_available%]",
      "reauth_account_mismatch": "The Spotify account authenticated with, does not match the account needed re-authentication."
    },
    "create_entry": { "default": "Successfully authenticated with Spotify." }
  },
  "options": {
    "step": {
      "init": {
        "title": "{name} Options",
        "description": "Configure SpotifyPlus integration options that control functionality.",
        "data": {
          "device_default": "Default Spotify Connect Player Device ID when none are active."
        },
        "submit": "Save"
      }
    },
    "error": {
      "no_player_devices": "Per Spotify Web API, there are currently no Spotify Connect devices active.  Please close the configuration options, play a track on any Spotify Connect player for a minute or two, and then open the configuration options again."
    }
  },
  "system_health": {
    "info": {
      "api_endpoint_reachable": "Spotify API endpoint reachable"
    }
  },
  "issues": {
    "removed_yaml": {
      "title": "The Spotify YAML configuration has been removed",
      "description": "Configuring Spotify using YAML has been removed.\n\nYour existing YAML configuration is not used by Home Assistant.\n\nRemove the YAML configuration from your configuration.yaml file and restart Home Assistant to fix this issue."
    }
  },
  "services": {
    "get_album": {
      "name": "Get Album",
      "description": "Get Spotify catalog information for a single album.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "album_id": {
          "name": "Album Id",
          "description": "The Spotify ID of the album."
        },
        "market": {
          "name": "Market / Country Code",
          "description": "An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that is available in that market will be returned.  The country associated with the user account will take priority over this parameter."
        }
      }
    },
    "get_album_favorites": {
      "name": "Get Album Favorites",
      "description": "Get a list of the albums saved in the current Spotify user's 'Your Library'.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "limit": {
          "name": "Limit",
          "description": "The maximum number of items to return in a page of items.  Default is 20, Range is 1 to 50."
        },
        "offset": {
          "name": "Offset",
          "description": "The page index offset of the first item to return.  Use with limit to get the next set of items.  Default is 0 (the first item)."
        },
        "market": {
          "name": "Market / Country Code",
          "description": "An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that is available in that market will be returned.  The country associated with the user account will take priority over this parameter."
        },
        "limit_total": {
          "name": "Limit Total",
          "description": "The maximum number of items to return for the request.  If specified, this argument overrides the limit and offset argument values and paging is automatically used to retrieve all available items up to the specified limit total."
        }
      }
    },
    "get_album_new_releases": {
      "name": "Get Album New Releases",
      "description": "Get a list of new album releases featured in Spotify.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "limit": {
          "name": "Limit",
          "description": "The maximum number of items to return in a page of items.  Default is 20, Range is 1 to 50."
        },
        "offset": {
          "name": "Offset",
          "description": "The page index offset of the first item to return.  Use with limit to get the next set of items.  Default is 0 (the first item)."
        },
        "country": {
          "name": "Market / Country Code",
          "description": "An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that is available in that market will be returned.  The country associated with the user account will take priority over this parameter."
        },
        "limit_total": {
          "name": "Limit Total",
          "description": "The maximum number of items to return for the request.  If specified, this argument overrides the limit and offset argument values and paging is automatically used to retrieve all available items up to the specified limit total."
        }
      }
    },
    "get_artist": {
      "name": "Get Artist",
      "description": "Get Spotify catalog information for a single artist.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "artist_id": {
          "name": "Artist Id",
          "description": "The Spotify ID of the artist."
        }
      }
    },
    "get_artist_albums": {
      "name": "Get Artist Albums",
      "description": "Get Spotify catalog information about an artist's albums.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "artist_id": {
          "name": "Artist Id",
          "description": "The Spotify ID of the artist."
        },
        "include_groups": {
          "name": "Include Groups",
          "description": "A comma-separated list of keywords that will be used to filter the response.  If not supplied, all album types will be returned. Valid values are `album`, `single`, `appears_on`, `compilation`."
        },
        "limit": {
          "name": "Limit",
          "description": "The maximum number of items to return in a page of items.  Default is 20, Range is 1 to 50."
        },
        "offset": {
          "name": "Offset",
          "description": "The page index offset of the first item to return.  Use with limit to get the next set of items.  Default is 0 (the first item)."
        },
        "market": {
          "name": "Market / Country Code",
          "description": "An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that is available in that market will be returned.  The country associated with the user account will take priority over this parameter."
        },
        "limit_total": {
          "name": "Limit Total",
          "description": "The maximum number of items to return for the request.  If specified, this argument overrides the limit and offset argument values and paging is automatically used to retrieve all available items up to the specified limit total."
        }
      }
    },
    "get_artists_followed": {
      "name": "Get Artists Followed",
      "description": "Get the current user's followed artists.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "after": {
          "name": "After Artist ID",
          "description": "The last artist ID retrieved from the previous request, or null for the first request."
        },
        "limit": {
          "name": "Limit",
          "description": "The maximum number of items to return in a page of items.  Default is 20, Range is 1 to 50."
        },
        "limit_total": {
          "name": "Limit Total",
          "description": "The maximum number of items to return for the request.  If specified, this argument overrides the limit and offset argument values and paging is automatically used to retrieve all available items up to the specified limit total."
        }
      }
    },
    "get_browse_categorys": {
      "name": "Get Browse Categorys",
      "description": "Get a sorted list of ALL categories used to tag items in Spotify.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "country": {
          "name": "Market / Country Code",
          "description": "An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that is available in that market will be returned.  The country associated with the user account will take priority over this parameter."
        },
        "locale": {
          "name": "Locale",
          "description": "The desired language, consisting of a lowercase ISO 639-1 language code and an uppercase ISO 3166-1 alpha-2 country code, joined by an underscore.  For example `es_MX`, meaning `Spanish (Mexico)`.  Provide this parameter if you want the results returned in a particular language (where available).  Note that if locale is not supplied, or if the specified language is not available, all strings will be returned in the Spotify default language (American English)."
        },
        "refresh": {
          "name": "Refresh Cache",
          "description": "True to return real-time information from the spotify web api and update the cache; otherwise, False to just return the cached value."
        }
      }
    },
    "get_category_playlists": {
      "name": "Get Category Playlists",
      "description": "Get a list of Spotify playlists tagged with a particular category.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "category_id": {
          "name": "Category ID",
          "description": "The Spotify category ID (not name) for the category."
        },
        "limit": {
          "name": "Limit",
          "description": "The maximum number of items to return in a page of items.  Default is 20, Range is 1 to 50."
        },
        "offset": {
          "name": "Offset",
          "description": "The page index offset of the first item to return.  Use with limit to get the next set of items.  Default is 0 (the first item)."
        },
        "country": {
          "name": "Market / Country Code",
          "description": "An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that is available in that market will be returned.  The country associated with the user account will take priority over this parameter."
        },
        "limit_total": {
          "name": "Limit Total",
          "description": "The maximum number of items to return for the request.  If specified, this argument overrides the limit and offset argument values and paging is automatically used to retrieve all available items up to the specified limit total."
        }
      }
    },
    "get_featured_playlists": {
      "name": "Get Featured Playlists",
      "description": "Get a list of Spotify featured playlists.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "limit": {
          "name": "Limit",
          "description": "The maximum number of items to return in a page of items.  Default is 20, Range is 1 to 50."
        },
        "offset": {
          "name": "Offset",
          "description": "The page index offset of the first item to return.  Use with limit to get the next set of items.  Default is 0 (the first item)."
        },
        "country": {
          "name": "Market / Country Code",
          "description": "An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that is available in that market will be returned.  The country associated with the user account will take priority over this parameter."
        },
        "locale": {
          "name": "Locale",
          "description": "The desired language, consisting of a lowercase ISO 639-1 language code and an uppercase ISO 3166-1 alpha-2 country code, joined by an underscore.  For example `es_MX`, meaning `Spanish (Mexico)`.  Provide this parameter if you want the results returned in a particular language (where available).  Note that if locale is not supplied, or if the specified language is not available, all strings will be returned in the Spotify default language (American English)."
        },
        "timestamp": {
          "name": "Timestamp",
          "description": "A timestamp in ISO 8601 format (yyyy-MM-ddTHH:mm:ss). Use this parameter to specify the user's local time to get results tailored for that specific date and time in the day. If not provided, the response defaults to the current UTC time."
        },
        "limit_total": {
          "name": "Limit Total",
          "description": "The maximum number of items to return for the request.  If specified, this argument overrides the limit and offset argument values and paging is automatically used to retrieve all available items up to the specified limit total."
        }
      }
    },
    "get_player_devices": {
      "name": "Get Player Devices",
      "description": "Get information about a user's available Spotify Connect player devices.  Some device models are not supported and will not be listed in the API response.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "refresh": {
          "name": "Refresh?",
          "description": "True to return real-time information from the spotify web api and update the cache; otherwise, False to just return the cached value."
        }
      }
    },
    "get_player_queue_info": {
      "name": "Get Player Queue Info",
      "description": "Get the list of objects that make up the user's playback queue.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        }
      }
    },
    "get_player_recent_tracks": {
      "name": "Get Player Recent Tracks",
      "description": "Get tracks from the current user's recently played tracks; currently doesn't support podcast episodes, and only 50 items may be returned due to spotify limits.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "limit": {
          "name": "Limit",
          "description": "The maximum number of items to return in a page of items.  Default is 20, Range is 1 to 50."
        },
        "after": {
          "name": "After Time MS",
          "description": "Returns all items after (but not including) this cursor position, which is a Unix timestamp in milliseconds.  If `after` is specified, `before` must not be specified.  Use with limit to get the next set of items.  Default is `0` (the first item)."
        },
        "before": {
          "name": "Before Time MS",
          "description": "Returns all items before (but not including) this cursor position, which is a Unix timestamp in milliseconds.  If `before` is specified, `after` must not be specified.  Use with limit to get the next set of items.  Default is `0` (the first item)."
        },
        "limit_total": {
          "name": "Limit Total",
          "description": "The maximum number of items to return for the request.  If specified, this argument overrides the limit and offset argument values and paging is automatically used to retrieve all available items up to the specified limit total."
        }
      }
    },
    "get_playlist": {
      "name": "Get Playlist",
      "description": "Get a playlist owned by a Spotify user.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "playlist_id": {
          "name": "Playlist Id",
          "description": "The Spotify ID of the playlist."
        },
        "market": {
          "name": "Market / Country Code",
          "description": "An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that is available in that market will be returned.  The country associated with the user account will take priority over this parameter."
        },
        "fields": {
          "name": "Fields",
          "description": "A comma-separated list of fields to return from the Spotify Web API. All fields are returned if omitted."
        },
        "additional_types": {
          "name": "Additional Types",
          "description": "A comma-separated list of item types that your client supports besides the default track type. Valid types are 'track' and 'episode'."
        }
      }
    },
    "get_playlist_favorites": {
      "name": "Get Playlist Favorites",
      "description": "Get a list of the playlists owned or followed by the current Spotify user.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "limit": {
          "name": "Limit",
          "description": "The maximum number of items to return in a page of items.  Default is 20, Range is 1 to 50."
        },
        "offset": {
          "name": "Offset",
          "description": "The page index offset of the first item to return.  Use with limit to get the next set of items.  Default is 0 (the first item)."
        },
        "limit_total": {
          "name": "Limit Total",
          "description": "The maximum number of items to return for the request.  If specified, this argument overrides the limit and offset argument values and paging is automatically used to retrieve all available items up to the specified limit total."
        }
      }
    },
    "get_show": {
      "name": "Get Show",
      "description": "Get Spotify catalog information for a single show.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "show_id": {
          "name": "Show Id",
          "description": "The Spotify ID of the show."
        },
        "market": {
          "name": "Market / Country Code",
          "description": "An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that is available in that market will be returned.  The country associated with the user account will take priority over this parameter."
        }
      }
    },
    "get_show_episodes": {
      "name": "Get Show Episodes",
      "description": "Get Spotify catalog information about a show's episodes.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "show_id": {
          "name": "Show ID",
          "description": "The Spotify ID for the show."
        },
        "limit": {
          "name": "Limit",
          "description": "The maximum number of items to return in a page of items.  Default is 20, Range is 1 to 50."
        },
        "offset": {
          "name": "Offset",
          "description": "The page index offset of the first item to return.  Use with limit to get the next set of items.  Default is 0 (the first item)."
        },
        "market": {
          "name": "Market / Country Code",
          "description": "An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that is available in that market will be returned.  The country associated with the user account will take priority over this parameter."
        },
        "limit_total": {
          "name": "Limit Total",
          "description": "The maximum number of items to return for the request.  If specified, this argument overrides the limit and offset argument values and paging is automatically used to retrieve all available items up to the specified limit total."
        }
      }
    },
    "get_show_favorites": {
      "name": "Get Show Favorites",
      "description": "Get a list of the shows saved in the current Spotify user's 'Your Library'.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "limit": {
          "name": "Limit",
          "description": "The maximum number of items to return in a page of items.  Default is 20, Range is 1 to 50."
        },
        "offset": {
          "name": "Offset",
          "description": "The page index offset of the first item to return.  Use with limit to get the next set of items.  Default is 0 (the first item)."
        },
        "limit_total": {
          "name": "Limit Total",
          "description": "The maximum number of items to return for the request.  If specified, this argument overrides the limit and offset argument values and paging is automatically used to retrieve all available items up to the specified limit total."
        }
      }
    },
    "get_track_favorites": {
      "name": "Get Track Favorites",
      "description": "Get a list of the tracks saved in the current Spotify user's 'Your Library'.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "limit": {
          "name": "Limit",
          "description": "The maximum number of items to return in a page of items.  Default is 20, Range is 1 to 50."
        },
        "offset": {
          "name": "Offset",
          "description": "The page index offset of the first item to return.  Use with limit to get the next set of items.  Default is 0 (the first item)."
        },
        "market": {
          "name": "Market / Country Code",
          "description": "An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that is available in that market will be returned.  The country associated with the user account will take priority over this parameter."
        },
        "limit_total": {
          "name": "Limit Total",
          "description": "The maximum number of items to return for the request.  If specified, this argument overrides the limit and offset argument values and paging is automatically used to retrieve all available items up to the specified limit total."
        }
      }
    },
    "get_users_top_artists": {
      "name": "Get Users Top Artists",
      "description": "Get the current user's top artists based on calculated affinity.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "time_range": {
          "name": "Time Range",
          "description": "Over what time frame the affinities are computed. Valid values are `long_term` (calculated from several years of data and including all new data as it becomes available), `medium_term` (approximately last 6 months), and `short_term` (approximately last 4 weeks)."
        },
        "limit": {
          "name": "Limit",
          "description": "The maximum number of items to return in a page of items.  Default is 20, Range is 1 to 50."
        },
        "offset": {
          "name": "Offset",
          "description": "The page index offset of the first item to return.  Use with limit to get the next set of items.  Default is 0 (the first item)."
        },
        "limit_total": {
          "name": "Limit Total",
          "description": "The maximum number of items to return for the request.  If specified, this argument overrides the limit and offset argument values and paging is automatically used to retrieve all available items up to the specified limit total."
        }
      }
    },
    "get_users_top_tracks": {
      "name": "Get Users Top Tracks",
      "description": "Get the current user's top tracks based on calculated affinity.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "time_range": {
          "name": "Time Range",
          "description": "Over what time frame the affinities are computed. Valid values are `long_term` (calculated from several years of data and including all new data as it becomes available), `medium_term` (approximately last 6 months), and `short_term` (approximately last 4 weeks)."
        },
        "limit": {
          "name": "Limit",
          "description": "The maximum number of items to return in a page of items.  Default is 20, Range is 1 to 50."
        },
        "offset": {
          "name": "Offset",
          "description": "The page index offset of the first item to return.  Use with limit to get the next set of items.  Default is 0 (the first item)."
        },
        "limit_total": {
          "name": "Limit Total",
          "description": "The maximum number of items to return for the request.  If specified, this argument overrides the limit and offset argument values and paging is automatically used to retrieve all available items up to the specified limit total."
        }
      }
    },
    "player_media_play_context": {
      "name": "Player Media Play Context",
      "description": "Start playing one or more tracks of the specified context on a Spotify Connect device.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "context_uri": {
          "name": "Context Uri",
          "description": "Spotify URI of the context to play.  Valid contexts are albums, artists & playlists."
        },
        "offset_uri": {
          "name": "Offset Uri",
          "description": "Indicates from what Uri in the context playback should start.  Only available when contextUri corresponds to an artist, album or playlist.  The offsetPosition argument will be used if this value is null."
        },
        "offset_position": {
          "name": "Offset Position",
          "description": "Indicates from what position in the context playback should start.  The value is zero-based, and can't be negative.  Only available when contextUri corresponds to an album or playlist."
        },
        "position_ms": {
          "name": "Seek Position",
          "description": "The position (in milliseconds) to seek to; must be a positive number.  Passing in a position that is greater than the length of the track will cause the player to start playing the next track."
        },
        "device_id": {
          "name": "Device ID",
          "description": "The id of the device this command is targeting.  If not supplied, the user's currently active device is the target.  If no device is active (or an '*' is specified), then the SpotifyPlus default device is activated."
        }
      }
    },
    "player_media_play_tracks": {
      "name": "Player Media Play Tracks",
      "description": "Start playing one or more tracks on the specified Spotify Connect device.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "uris": {
          "name": "Uri's",
          "description": "A list of Spotify track URIs to play; can be track or episode URIs.  A maximum of 50 items can be added in one request."
        },
        "position_ms": {
          "name": "Seek Position",
          "description": "The position (in milliseconds) to seek to; must be a positive number.  Passing in a position that is greater than the length of the track will cause the player to start playing the next track."
        },
        "device_id": {
          "name": "Device ID",
          "description": "The id of the device this command is targeting.  If not supplied, the user's currently active device is the target.  If no device is active (or an '*' is specified), then the SpotifyPlus default device is activated."
        }
      }
    },
    "player_transfer_playback": {
      "name": "Player Transfer Playback",
      "description": "Transfer playback to a new Spotify Connect device and optionally begin playback.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "device_id": {
          "name": "Device ID",
          "description": "The id of the device on which playback should be started/transferred.  If no device is specified, then the SpotifyPlus default device is activated."
        },
        "play": {
          "name": "Start Play?",
          "description": "True (default) to start playback on the new device; otherise, False to keep the current playback state on the existing device."
        }
      }
    },
    "playlist_items_add": {
      "name": "Playlist Items Add",
      "description": "Add one or more items to a user's playlist.  Items are added in the order they are listed in the `uris` argument.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "playlist_id": {
          "name": "Playlist ID",
          "description": "The Spotify ID of the playlist (e.g. 5AC9ZXA7nJ7oGWO911FuDG)."
        },
        "uris": {
          "name": "URI's",
          "description": "A comma-separated list of Spotify URIs to add; can be track or episode URIs (e.g. spotify:track:4iV5W9uYEdYUVa79Axb7Rh).  A maximum of 100 items can be added in one request.  If nothing is specified, then the track (or episode) uri currently playing is used."
        },
        "position": {
          "name": "Position",
          "description": "The position to insert the items, a zero-based index.  For example, to insert the items in the first position use a value of 0; to insert the items in the third position use a value of 2.  Omit the parameter to append the items to the end of the playlist."
        }
      }
    },
    "search_albums": {
      "name": "Search Albums",
      "description": "Get Spotify catalog information about Albums that match a keyword string.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "criteria": {
          "name": "Search Criteria",
          "description": "The criteria to search for."
        },
        "limit": {
          "name": "Limit",
          "description": "The maximum number of items to return in a page of items.  Default is 20, Range is 1 to 50."
        },
        "market": {
          "name": "Market / Country Code",
          "description": "An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that is available in that market will be returned.  The country associated with the Spotify user account will take priority over this parameter."
        },
        "limit_total": {
          "name": "Limit Total",
          "description": "The maximum number of items to return for the request.  If specified, this argument overrides the limit and offset argument values and paging is automatically used to retrieve all available items up to the specified limit total."
        }
      }
    },
    "search_artists": {
      "name": "Search Artists",
      "description": "Get Spotify catalog information about Artists that match a keyword string.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "criteria": {
          "name": "Search Criteria",
          "description": "The criteria to search for."
        },
        "limit": {
          "name": "Limit",
          "description": "The maximum number of items to return in a page of items.  Default is 20, Range is 1 to 50."
        },
        "market": {
          "name": "Market / Country Code",
          "description": "An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that is available in that market will be returned.  The country associated with the Spotify user account will take priority over this parameter."
        },
        "limit_total": {
          "name": "Limit Total",
          "description": "The maximum number of items to return for the request.  If specified, this argument overrides the limit and offset argument values and paging is automatically used to retrieve all available items up to the specified limit total."
        }
      }
    },
    "search_audiobooks": {
      "name": "Search Audiobooks",
      "description": "Get Spotify catalog information about Audiobooks that match a keyword string.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "criteria": {
          "name": "Search Criteria",
          "description": "The criteria to search for."
        },
        "limit": {
          "name": "Limit",
          "description": "The maximum number of items to return in a page of items.  Default is 20, Range is 1 to 50."
        },
        "market": {
          "name": "Market / Country Code",
          "description": "An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that is available in that market will be returned.  The country associated with the Spotify user account will take priority over this parameter."
        },
        "limit_total": {
          "name": "Limit Total",
          "description": "The maximum number of items to return for the request.  If specified, this argument overrides the limit and offset argument values and paging is automatically used to retrieve all available items up to the specified limit total."
        }
      }
    },
    "search_episodes": {
      "name": "Search Episodes",
      "description": "Get Spotify catalog information about Episodes that match a keyword string.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "criteria": {
          "name": "Search Criteria",
          "description": "The criteria to search for."
        },
        "limit": {
          "name": "Limit",
          "description": "The maximum number of items to return in a page of items.  Default is 20, Range is 1 to 50."
        },
        "market": {
          "name": "Market / Country Code",
          "description": "An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that is available in that market will be returned.  The country associated with the Spotify user account will take priority over this parameter."
        },
        "limit_total": {
          "name": "Limit Total",
          "description": "The maximum number of items to return for the request.  If specified, this argument overrides the limit and offset argument values and paging is automatically used to retrieve all available items up to the specified limit total."
        }
      }
    },
    "search_playlists": {
      "name": "Search Playlists",
      "description": "Get Spotify catalog information about Playlists that match a keyword string.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "criteria": {
          "name": "Search Criteria",
          "description": "The criteria to search for."
        },
        "limit": {
          "name": "Limit",
          "description": "The maximum number of items to return in a page of items.  Default is 20, Range is 1 to 50."
        },
        "market": {
          "name": "Market / Country Code",
          "description": "An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that is available in that market will be returned.  The country associated with the Spotify user account will take priority over this parameter."
        },
        "limit_total": {
          "name": "Limit Total",
          "description": "The maximum number of items to return for the request.  If specified, this argument overrides the limit and offset argument values and paging is automatically used to retrieve all available items up to the specified limit total."
        }
      }
    },
    "search_shows": {
      "name": "Search Shows",
      "description": "Get Spotify catalog information about Shows that match a keyword string.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "criteria": {
          "name": "Search Criteria",
          "description": "The criteria to search for."
        },
        "limit": {
          "name": "Limit",
          "description": "The maximum number of items to return in a page of items.  Default is 20, Range is 1 to 50."
        },
        "market": {
          "name": "Market / Country Code",
          "description": "An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that is available in that market will be returned.  The country associated with the Spotify user account will take priority over this parameter."
        },
        "limit_total": {
          "name": "Limit Total",
          "description": "The maximum number of items to return for the request.  If specified, this argument overrides the limit and offset argument values and paging is automatically used to retrieve all available items up to the specified limit total."
        }
      }
    },
    "search_tracks": {
      "name": "Search Tracks",
      "description": "Get Spotify catalog information about Tracks that match a keyword string.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "criteria": {
          "name": "Search Criteria",
          "description": "The criteria to search for."
        },
        "limit": {
          "name": "Limit",
          "description": "The maximum number of items to return in a page of items.  Default is 20, Range is 1 to 50."
        },
        "market": {
          "name": "Market / Country Code",
          "description": "An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that is available in that market will be returned.  The country associated with the Spotify user account will take priority over this parameter."
        },
        "limit_total": {
          "name": "Limit Total",
          "description": "The maximum number of items to return for the request.  If specified, this argument overrides the limit and offset argument values and paging is automatically used to retrieve all available items up to the specified limit total."
        }
      }
    }
  }
}
